// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: format/v1/v1.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MagicHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MagicNumber uint64 `protobuf:"varint,1,opt,name=magic_number,json=magicNumber,proto3" json:"magic_number,omitempty"`
	StackId     uint64 `protobuf:"varint,2,opt,name=stack_id,json=stackId,proto3" json:"stack_id,omitempty"`
}

func (x *MagicHeader) Reset() {
	*x = MagicHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_format_v1_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MagicHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MagicHeader) ProtoMessage() {}

func (x *MagicHeader) ProtoReflect() protoreflect.Message {
	mi := &file_format_v1_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MagicHeader.ProtoReflect.Descriptor instead.
func (*MagicHeader) Descriptor() ([]byte, []int) {
	return file_format_v1_v1_proto_rawDescGZIP(), []int{0}
}

func (x *MagicHeader) GetMagicNumber() uint64 {
	if x != nil {
		return x.MagicNumber
	}
	return 0
}

func (x *MagicHeader) GetStackId() uint64 {
	if x != nil {
		return x.StackId
	}
	return 0
}

type DataHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MagicStart uint32 `protobuf:"varint,1,opt,name=magic_start,json=magicStart,proto3" json:"magic_start,omitempty"`
	Cookie     uint32 `protobuf:"varint,2,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Size       uint32 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	Crc        uint32 `protobuf:"varint,4,opt,name=crc,proto3" json:"crc,omitempty"`
	MagicEnd   uint32 `protobuf:"varint,5,opt,name=magic_end,json=magicEnd,proto3" json:"magic_end,omitempty"`
}

func (x *DataHeader) Reset() {
	*x = DataHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_format_v1_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHeader) ProtoMessage() {}

func (x *DataHeader) ProtoReflect() protoreflect.Message {
	mi := &file_format_v1_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHeader.ProtoReflect.Descriptor instead.
func (*DataHeader) Descriptor() ([]byte, []int) {
	return file_format_v1_v1_proto_rawDescGZIP(), []int{1}
}

func (x *DataHeader) GetMagicStart() uint32 {
	if x != nil {
		return x.MagicStart
	}
	return 0
}

func (x *DataHeader) GetCookie() uint32 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

func (x *DataHeader) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DataHeader) GetCrc() uint32 {
	if x != nil {
		return x.Crc
	}
	return 0
}

func (x *DataHeader) GetMagicEnd() uint32 {
	if x != nil {
		return x.MagicEnd
	}
	return 0
}

type IndexRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookie     uint32 `protobuf:"varint,1,opt,name=cookie,proto3" json:"cookie,omitempty"`
	OffsetData uint64 `protobuf:"varint,2,opt,name=offset_data,json=offsetData,proto3" json:"offset_data,omitempty"`
	SizeData   uint64 `protobuf:"varint,3,opt,name=size_data,json=sizeData,proto3" json:"size_data,omitempty"`
}

func (x *IndexRecord) Reset() {
	*x = IndexRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_format_v1_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRecord) ProtoMessage() {}

func (x *IndexRecord) ProtoReflect() protoreflect.Message {
	mi := &file_format_v1_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRecord.ProtoReflect.Descriptor instead.
func (*IndexRecord) Descriptor() ([]byte, []int) {
	return file_format_v1_v1_proto_rawDescGZIP(), []int{2}
}

func (x *IndexRecord) GetCookie() uint32 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

func (x *IndexRecord) GetOffsetData() uint64 {
	if x != nil {
		return x.OffsetData
	}
	return 0
}

func (x *IndexRecord) GetSizeData() uint64 {
	if x != nil {
		return x.SizeData
	}
	return 0
}

type MegicRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateTime int64  `protobuf:"varint,1,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	OffsetData uint64 `protobuf:"varint,2,opt,name=offset_data,json=offsetData,proto3" json:"offset_data,omitempty"`
	SizeData   uint32 `protobuf:"varint,3,opt,name=size_data,json=sizeData,proto3" json:"size_data,omitempty"`
	Cookie     uint32 `protobuf:"varint,4,opt,name=cookie,proto3" json:"cookie,omitempty"`
	Filename   string `protobuf:"bytes,5,opt,name=filename,proto3" json:"filename,omitempty"`
	Extra      []byte `protobuf:"bytes,6,opt,name=extra,proto3" json:"extra,omitempty"`
}

func (x *MegicRecord) Reset() {
	*x = MegicRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_format_v1_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MegicRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MegicRecord) ProtoMessage() {}

func (x *MegicRecord) ProtoReflect() protoreflect.Message {
	mi := &file_format_v1_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MegicRecord.ProtoReflect.Descriptor instead.
func (*MegicRecord) Descriptor() ([]byte, []int) {
	return file_format_v1_v1_proto_rawDescGZIP(), []int{3}
}

func (x *MegicRecord) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MegicRecord) GetOffsetData() uint64 {
	if x != nil {
		return x.OffsetData
	}
	return 0
}

func (x *MegicRecord) GetSizeData() uint32 {
	if x != nil {
		return x.SizeData
	}
	return 0
}

func (x *MegicRecord) GetCookie() uint32 {
	if x != nil {
		return x.Cookie
	}
	return 0
}

func (x *MegicRecord) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *MegicRecord) GetExtra() []byte {
	if x != nil {
		return x.Extra
	}
	return nil
}

var File_format_v1_v1_proto protoreflect.FileDescriptor

var file_format_v1_v1_proto_rawDesc = []byte{
	0x0a, 0x12, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x22, 0x4b, 0x0a, 0x0b, 0x4d, 0x61, 0x67, 0x69,
	0x63, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d,
	0x61, 0x67, 0x69, 0x63, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x63, 0x6b, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x61, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x61, 0x67, 0x69, 0x63,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x72, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x63, 0x72, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x5f, 0x65, 0x6e, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6d, 0x61, 0x67, 0x69, 0x63, 0x45, 0x6e, 0x64,
	0x22, 0x63, 0x0a, 0x0b, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x69, 0x7a,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb6, 0x01, 0x0a, 0x0b, 0x4d, 0x65, 0x67, 0x69, 0x63, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x69, 0x7a, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x42, 0x06,
	0x5a, 0x04, 0x2f, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_format_v1_v1_proto_rawDescOnce sync.Once
	file_format_v1_v1_proto_rawDescData = file_format_v1_v1_proto_rawDesc
)

func file_format_v1_v1_proto_rawDescGZIP() []byte {
	file_format_v1_v1_proto_rawDescOnce.Do(func() {
		file_format_v1_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_format_v1_v1_proto_rawDescData)
	})
	return file_format_v1_v1_proto_rawDescData
}

var file_format_v1_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_format_v1_v1_proto_goTypes = []interface{}{
	(*MagicHeader)(nil), // 0: v1.MagicHeader
	(*DataHeader)(nil),  // 1: v1.DataHeader
	(*IndexRecord)(nil), // 2: v1.IndexRecord
	(*MegicRecord)(nil), // 3: v1.MegicRecord
}
var file_format_v1_v1_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_format_v1_v1_proto_init() }
func file_format_v1_v1_proto_init() {
	if File_format_v1_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_format_v1_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MagicHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_format_v1_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_format_v1_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_format_v1_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MegicRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_format_v1_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_format_v1_v1_proto_goTypes,
		DependencyIndexes: file_format_v1_v1_proto_depIdxs,
		MessageInfos:      file_format_v1_v1_proto_msgTypes,
	}.Build()
	File_format_v1_v1_proto = out.File
	file_format_v1_v1_proto_rawDesc = nil
	file_format_v1_v1_proto_goTypes = nil
	file_format_v1_v1_proto_depIdxs = nil
}
